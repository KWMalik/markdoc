First we have to set up a Python function for running the command-line tool. Since the main entry point is the `markdoc.cli.main.main()` function, we can just call that directly, with some defaults for the current wiki root:

    >>> from markdoc.cli.main import main
    >>> def markdoc(*args):
    ...     try:
    ...         main(['-c', WIKI_ROOT] + list(args))
    ...     except SystemExit, exc:
    ...         return exc.code
    ...     return 0

The `show-config` command will show the current Markdoc config:

    >>> exit_code = markdoc('show-config') # doctest: +ELLIPSIS
    {'9d03e32c6cb1455388a170e3bb0c2030': '7010d5d5871143d089cb662cb540cbd5',
     'document-extensions': set(['.markdown', '.md', '.mdown', '.text', '.wiki']),
     'hide-prefix': '_',
     'meta': {'config_file': '.../example/markdoc.yaml',
              'root': '.../example'}}
    >>> exit_code
    0

`sync-static` will compile the wiki's static media into the HTML root:

    >>> markdoc('--quiet', 'sync-static') # doctest: +ELLIPSIS
    0

If you leave out the `--quiet` option, Markdoc will print some additional logging information, including the `rsync` command that's run in the background; the rsync output itself will also be written to the terminal.

The static media will now be in the HTML root:

    >>> import os.path as p
    >>> p.isfile(p.join(WIKI_ROOT, '_html', 'example.css'))
    True
